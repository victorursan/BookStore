@startuml

package Models {
class Book
class Client
}

package Repository {
interface IRepository<E>
class BookRepository
class ClientRepository
}

class Book {
    - Integer id
    - String title
    - String author
    - Long ISBN
    - String genre
    - String publisher
    - Integer price
    - Boolean available
    + Integer getId()
    + Long getISBN()
    + void setISBN(Long ISBN)
    + String getGenre()
    + void setGenre(String genre)
    + String getPublisher()
    + void setPublisher(String publisher)
    + Integer getPrice()
    + void setPrice(Integer price)
    + String getAuthor()
    + void setAuthor(String author)
    + String getTitle()
    + void setTitle(String title)
    + Boolean isAvailable()
    + void setAvailable(Boolean available)
}


class Client {
    - Integer id
    - String firstName
    - String lastName
    - List<Book> books
    + Integer getId()
    + String getFirstName()
    + void setFirstName(String firstName)
    + String getLastName()
    + void setLastName(String lastName)
    + List<Book> getBooks()
    + void setBooks(List<Book> books)
}

interface IRepository<E> {
    void add(E elem)
    E get(int id)
    ArrayList<E> getAll()
    void update(int id, E elem)
    void delete(int id);
}

class BookRepository implements IRepository {
    private List<Book> books
}
class ClientRepository implements IRepository {
    private List<Client> clients
}


Client "0" *-- "many" Book : contains

@enduml